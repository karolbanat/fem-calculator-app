@use '../abstracts/variables';
@use '../abstracts/mixins';

:root {
	/* 	colors */
	@each $theme, $colors in variables.$themes {
		@each $color, $shades in $colors {
			@each $shade, $value in $shades {
				--clr-#{$color}-#{$shade}-#{$theme}: #{$value};
			}
		}
	}

	/* 	font families */
	--ff-primary: 'League Spartan', sans-serif;

	/* 	font weights */
	@each $font-weight, $value in variables.$font-weights {
		--fw-#{$font-weight}: #{$value};
	}

	/* 	font sizes */
	@each $screen, $sizes in variables.$font-sizes {
		@if $screen == small {
			@each $size, $value in $sizes {
				--fz-#{$size}: #{$value};
			}
		} @else {
			@include mixins.mq($screen) {
				@each $size, $value in $sizes {
					--fz-#{$size}: #{$value};
				}
			}
		}
	}

	/* 	border radius */
	@each $screen, $radiuses in variables.$border-radius {
		@if $screen == small {
			@each $radius, $value in $radiuses {
				--borr-#{$radius}: #{$value};
			}
		} @else {
			@include mixins.mq($screen) {
				@each $radius, $value in $radiuses {
					--borr-#{$radius}: #{$value};
				}
			}
		}
	}

	/* 	spacings */
	--spacer-em-200: 0.625em;
	--spacer-em-300: 0.725em;
	--spacer-rem-200: 1.3rem;
	--spacer-rem-300: 2.4rem;
	--spacer-rem-400: 2.4rem;
	--spacer-rem-500: 3.2rem;
	@include mixins.mq(small) {
		--spacer-rem-200: 2.4rem;
		--spacer-rem-400: 3.2rem;
	}
}
